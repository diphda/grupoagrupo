<?php

/**
 * PluginsfWhoIsOnlineUserTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginsfWhoIsOnlineUserTable extends Doctrine_Table
{
/**
     * Returns an instance of this class.
     *
     * @return object PluginsfWhoIsOnlineUserTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('sfWhoIsOnlineUser');
    }
	/**
	 * Deletes old rows from database
	 * @param int $timeout
	 */
	public static function clearTimeouts($timeout)
	{
		$table = self::getInstance();
		$table->getQueryObject()->delete()->where($table->getComponentName().".ts < ?",time()-$timeout)->execute();
	}
	/**
	 * Get collection of country codes with fields
	 * count       Count of users from that country
	 * countrycode Code for current country
	 * country     Current country name
	 * @return Doctrine_Collection
	 */
	public static function getCountryCodes()
	{
		$table = self::getInstance();
		return $table->getQueryObject()
		->addSelect("COUNT(".$table->getComponentName().".countrycode) as count, ".$table->getComponentName().".countrycode, ".$table->getComponentName().".country")
		->groupBy($table->getComponentName().".countrycode ASC")
		->orderBy($table->getComponentName().".countrycode ASC")
		->execute();
	}
	/**
	 * Get collection of users oredered by names with fields
	 * ip          Ip address of user
	 * name        Name of user (see documentation for details)
	 * countrycode Code for users country
	 * country     Users country name
	 * browser     Users browser or unknown
	 * ts          Timestamp of last users action
	 * @return Doctrine_Collection
	 */
	public static function getUsers()
	{
		$table = self::getInstance();
		return $table->getQueryObject()
		->orderBy($table->getComponentName().".name ASC")
		->execute();
	}
	/**
	 * Returns count of current online users
	 * @return int
	 */
	public static function getUserCount()
	{
		$table = self::getInstance();
		$result = $table->getQueryObject()
		->select("COUNT(".$table->getComponentName().".countrycode) as count")
		->fetchOne();
		return $result->count;
	}
}