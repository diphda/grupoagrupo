<?php

/**
 * ProductTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ProductTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object ProductTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Product');
    }
    
    /*
     * 
     * Lista de productos ordenados
     */
    public function getProductList($pk)
    {
        return Doctrine_Core::getTable('Product')
        ->createQuery('c')
        ->where("product_subcategory_id=?",$pk)        
        ->leftJoin("c.Translation t")
        ->orderBy("t.name")
        ->execute();
    }

    /*
     * devuelve los productos para un proveedor dado.
     */
    public function getProductProvider($provider_id)
    {
        $query=Doctrine_Core::getTable('ProviderProduct')
        ->createQuery("a")
        ->where("provider_id=?",$provider_id)
        ->execute();

        $products=array();
        foreach ($query as $provider_product)
        {
            $products[]=$provider_product->product_id;
        }

        return Doctrine_Core::getTable("Product")->createQuery()->whereIn("id",$products)->execute();
    }

    /*
     * devuelve los ids de los productos en un array para un proveedor dado.
     * Es par la funciÃ³n getProductList
     */
    public function getIdProductProvider($provider_id)
    {
        $query=Doctrine_Core::getTable('ProviderProduct')
        ->createQuery("a")
        ->where("provider_id=?",$provider_id)
        ->execute();

        $products=array();
        foreach ($query as $provider_product)
        {
            $products[]=$provider_product->product_id;
        }

        return $products;
    }
    
    /**
     * 
     */
    public function getProductBasket()
    {
        return $query=Doctrine::getTable("Product")->createQuery()->where("product_category_id=?",10)->andWhere("product_subcategory_id=?",64);
    }
    
}